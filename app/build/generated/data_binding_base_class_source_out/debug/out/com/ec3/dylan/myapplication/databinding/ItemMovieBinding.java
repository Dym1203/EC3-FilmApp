// Generated by view binder compiler. Do not edit!
package com.ec3.dylan.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ec3.dylan.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMovieBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cvItemMovie;

  @NonNull
  public final ImageView imgmovieposter;

  @NonNull
  public final TextView txtmovieoverview;

  @NonNull
  public final TextView txtmovierelease;

  @NonNull
  public final TextView txtmovietitle;

  private ItemMovieBinding(@NonNull CardView rootView, @NonNull CardView cvItemMovie,
      @NonNull ImageView imgmovieposter, @NonNull TextView txtmovieoverview,
      @NonNull TextView txtmovierelease, @NonNull TextView txtmovietitle) {
    this.rootView = rootView;
    this.cvItemMovie = cvItemMovie;
    this.imgmovieposter = imgmovieposter;
    this.txtmovieoverview = txtmovieoverview;
    this.txtmovierelease = txtmovierelease;
    this.txtmovietitle = txtmovietitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMovieBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMovieBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_movie, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMovieBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cvItemMovie = (CardView) rootView;

      id = R.id.imgmovieposter;
      ImageView imgmovieposter = ViewBindings.findChildViewById(rootView, id);
      if (imgmovieposter == null) {
        break missingId;
      }

      id = R.id.txtmovieoverview;
      TextView txtmovieoverview = ViewBindings.findChildViewById(rootView, id);
      if (txtmovieoverview == null) {
        break missingId;
      }

      id = R.id.txtmovierelease;
      TextView txtmovierelease = ViewBindings.findChildViewById(rootView, id);
      if (txtmovierelease == null) {
        break missingId;
      }

      id = R.id.txtmovietitle;
      TextView txtmovietitle = ViewBindings.findChildViewById(rootView, id);
      if (txtmovietitle == null) {
        break missingId;
      }

      return new ItemMovieBinding((CardView) rootView, cvItemMovie, imgmovieposter,
          txtmovieoverview, txtmovierelease, txtmovietitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
